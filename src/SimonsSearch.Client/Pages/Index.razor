@page "/"
@using SimonsSearch.Client.Clients
@using SimonsSearch.Client.Common
@using SimonsSearch.Client.Models
@inject SearchClient SearchClient
<h1 class="app-title">Simons Search</h1>


<section>
    <Container Margin="Margin.Is5.FromRight.Is4.FromTop.Is4.FromBottom">
        <Row>
            <Column>
                <TextEdit @bind-Text="@searchQuery" KeyUp="@OnKeyUp"/>
            </Column>
            <Column>
                <Button Color="Color.Primary" @bind-Loading="@_loading" Clicked="@SearchOnClicked">Search</Button>
            </Column>
        </Row>
    </Container>
</section>

@if (_searchResult?.Any() ?? false)
{
    <Table Striped="true" Responsive="true">
        <TableHeader ThemeContrast="ThemeContrast.Dark">
            <TableRow>
                <TableHeaderCell>@TextConstants.NameCellText</TableHeaderCell>
                <TableHeaderCell>@TextConstants.InformationCellText</TableHeaderCell>
                <TableHeaderCell>@TextConstants.TypeCellText</TableHeaderCell>
            </TableRow>
        </TableHeader>
        <TableBody>
            @foreach (var result in _searchResult)
            {
                <TableRow>
                    <TableRowCell>@result.Name</TableRowCell>
                    <TableRowCell>@result.Metadata</TableRowCell>
                    <TableRowCell>@result.Type</TableRowCell>
                </TableRow>
            }
        </TableBody>
    </Table>
}

@code
{
    private readonly List<SearchResultModel> _searchResult = new List<SearchResultModel>();
    string searchQuery;
    bool _loading = false;

    private async Task SearchOnClicked()
    {
        await PerformSearch();
    }

    private async Task OnKeyUp(KeyboardEventArgs obj)
    {
        if (obj.Code == "Enter")
        {
            await PerformSearch();
        }
    }

    private async Task PerformSearch()
    {
        _loading = true;
        _searchResult.Clear();

        var result = await SearchClient.SearchAsync(searchQuery);

        _searchResult.AddRange(result);
        _loading = false;
    }
}
